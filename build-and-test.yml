name: Build and Test Java Pipeline

pr:
- master
- develop

trigger: none

variables: 
  - group: InternalKeys

stages:

- stage: Build_Windows
  dependsOn: []
  jobs:
  - job: Build
    pool:
      vmImage: 'windows-latest'

    steps:

    - checkout: self
      submodules: recursive
      lfs: true
      persistCredentials: true
      
    - task: MavenAuthenticate@0
      inputs:
        artifactsFeeds: 'pipeline-insider'

    # Set resource key environment variable on windows
    - powershell: |
        $Env:SuperResourceKey = "$(SuperResourceKey)"
        $Env:FOD_CLOUD_API_URL = "$(FOD_CLOUD_API_URL)"
      displayName: 'Set Resource Key Environment Variable'

    - task: Maven@1
      displayName: 'Maven test'
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'clean test'
        options: '-Dhttps.protocols=TLSv1.2 -DfailIfNoTests=false -DXmx2048m -Dfetchrepository.id=$(fetchrepository.id) -Dfetchrepository.url=$(fetchrepository.url)'
        jdkVersionOption: '1.11'
        publishJUnitResults: false 

    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '**/TEST-*.xml' 
        testRunTitle: 'Windows'
      condition: succeededOrFailed()

    - task: CopyFiles@2
      displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
      inputs:
        SourceFolder: '$(build.sourcesdirectory)'
        Contents: '**/*.jar'
        TargetFolder: '$(build.artifactstagingdirectory)'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: drop'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'

- stage: Build_Mac
  dependsOn: []
  jobs:
  - job: Build
    pool:
      vmImage: 'macOS-latest'

    steps:

    - checkout: self
      submodules: recursive
      lfs: true

    - task: MavenAuthenticate@0
      inputs:
        artifactsFeeds: 'pipeline-insider'

    - task: Maven@1
      displayName: 'Maven test'
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'clean test'
        options: '-Dhttps.protocols=TLSv1.2 -DfailIfNoTests=false -DXmx2048m -Dfetchrepository.id=$(fetchrepository.id) -Dfetchrepository.url=$(fetchrepository.url) -DSuperResourceKey=$(SuperResourceKey) -DFOD_CLOUD_API_URL=$(FOD_CLOUD_API_URL)'
        jdkVersionOption: '1.8'
        publishJUnitResults: false 

    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '**/TEST-*.xml' 
        testRunTitle: 'Mac'
      condition: succeededOrFailed()

    - task: CopyFiles@2
      displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
      inputs:
        SourceFolder: '$(build.sourcesdirectory)'
        Contents: '**/*.jar'
        TargetFolder: '$(build.artifactstagingdirectory)'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: drop'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'

- stage: Build_Linux
  dependsOn: []
  jobs:
  - job: Build
    pool:
      vmImage: 'ubuntu-latest'

    steps:

    - checkout: self
      submodules: recursive
      lfs: true

    - task: MavenAuthenticate@0
      inputs:
        artifactsFeeds: 'pipeline-insider'

    - task: Maven@1
      displayName: 'Maven test'
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'clean test'
        options: '-Dhttps.protocols=TLSv1.2 -DfailIfNoTests=false -DXmx2048m -Dfetchrepository.id=$(fetchrepository.id) -Dfetchrepository.url=$(fetchrepository.url) -DSuperResourceKey=$(SuperResourceKey) -DFOD_CLOUD_API_URL=$(FOD_CLOUD_API_URL)'
        jdkVersionOption: '1.8'
        publishJUnitResults: false 

    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '**/TEST-*.xml' 
        testRunTitle: 'Linux'
      condition: succeededOrFailed()

    - task: CopyFiles@2
      displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
      inputs:
        SourceFolder: '$(build.sourcesdirectory)'
        Contents: '**/*.jar'
        TargetFolder: '$(build.artifactstagingdirectory)'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: drop'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'